#!/usr/bin/perl

# smartraw - MMunin multigraph plugin to monitor raw S.M.A.R.T. attributes,
# from storage devices with smartctl command
#
# Copyright (C) 2019 Ken-ichi Mito

=head1 NAME

smartraw - MMunin multigraph plugin to monitor raw S.M.A.R.T. attributes,
from storage devices with smartctl command

=head1 APPLICABLE SYSTEMS

Linux system with smartmontools installed.

=head1 CONFIGURATION

This plugin needs root privilege to fetch S.M.A.R.T. attributes.

    [smartraw]
        user root
        env.devices sda sdb

smartctl: path to smartctl program (default: /usr/sbin/smartctl)
devices: list of devices to monitor

=head2 DEBUG

This plugin does not use MUNIN_DEBUG environment variable,
but for debugging usage, setting env.debug to 1 outputs more verbose messages to stderr.

=head1 INTERPRETATION

This plugin fetches specific S.M.A.R.T. attributes and make line graphs.
Some attributes will be multiplied, because original values are a little confusing.

=head2 Attributes

Most normal devices give 5, 9, 12, 197
PLEXTOR PX-G128M6e also gives 177, 241 and 242
Seagate Barracuda ST4000DM004-2CV104 also gives 241 and 242
SanDisk SDCZ80-016G (SanDisk SSD U100 16GB) gives 241 and 242

=head2 Details of attributes

PLEXTOR PX-G128M6e
    177: Wear_Leveling_Count => RAW_VALUE (count)
    241: Total_LBAs_Written  => RAW_VALUE * 32 (MiB)
    242: Total_LBAs_Read => RAW_VALUE * 32 (MiB)

Seagate Barracuda ST4000DM004-2CV104 and SanDisk SDCZ80-016G
    241: Total_LBAs_Written  => RAW_VALUE * 512 (Bytes)
    242: Total_LBAs_Read => RAW_VALUE * 512 (Bytes)

=head1 MAGIC MARKERS

 #%# family=manual
 #%# capabilities=multigraph

=head1 AUTHOR

Ken-ichi Mito

=head1 LICENSE

2-clause BSD License

=cut

use strict;
use warnings;
use Carp;
use utf8;

use Munin::Plugin;

my $DEBUG = defined $ENV{debug} ? $ENV{debug} : 0;

if ($<) {
    croak "this plugin need 'root' privilege to run";
}

# check current environment supports multigraph plugins
need_multigraph();

# hardcoded constants to skip unsupported devices, multiply values,
# and output messages
my $SMART_ATTR = {
};

# say 'no' for autoconf
if ($ARGV[0] and $ARGV[0] eq 'autoconf') {
    print "no (you should setup manually this plugin\n";
    exit 0;
}

# list up block devices
my @devices;
if (exists $ENV{devices}) {
    @devices = split(' ', $ENV{devices});
}
else {
    opendir(DEV, '/dev/') or croak "Failed to open '/dev/' directory: $!";
    @devices = grep {/^(hd[a-z]|sd[a-z]|nvme[0-9]+n[0-9]+)$/} readdir(DEV);
    closedir(DEV);
}

# fetch current S.M.A.R.T. attributes
my %smart_attributes = load_smart_attributes(@devices);

# dummy output for test

if ($ARGV[0] and $ARGV[0] eq 'config') {
    print_config(\%smart_attributes);
    exit 0;
}

print_graphs(\%smart_attributes);

# end of plugin execution
exit 0;


# load_smart_attributes
#
# load current S.M.A.R.T. attributes by using smartclt command

sub load_smart_attributes {
    my @devices = @_;
}

# print_config
#
# output config for root and deeeper graphs

sub print_config {
    # config for root graphs
    print <<"EOF";
multigraph smart_attr_177
graph_title Wear_Leveling_Count per device (177)
graph_args --base 1000
graph_vlabel counts
graph_info This graph shows the value of Wear_Leveling_Count S.M.A.R.T. attributes
graph_category smart
id177.label Wear_Leveling_Count
id177.type GAUGE
id177.min 0

multigraph smart_attr_241
graph_title Total_LBAs_Written per device (241)
graph_args --base 1024
graph_vlabel bytes
graph_info This graph shows the value of Total_LBAs_Written S.M.A.R.T. attributes
graph_category smart
id241.label Total_LBAs_Written
id241.type GAUGE
id241.min 0

multigraph smart_attr_242
graph_title Total_LBAs_Read per device (242)
graph_args --base 1024
graph_vlabel bytes
graph_info This graph shows the value of Total_LBAs_Read S.M.A.R.T. attributes
graph_category smart
id242.label Total_LBAs_Read
id242.type GAUGE
id242.min 0

EOF

    # config for deeeper graphs
    print <<"EOF";
multigraph smart_attr_177.sda
graph_title Wear_Leveling_Count (sda)
graph_args --base 1000
graph_vlabel counts
graph_info This graph shows the value of Wear_Leveling_Count S.M.A.R.T. attributes
graph_category smart
id177.label Wear_Leveling_Count
id177.type GAUGE
id177.min 0

multigraph smart_attr_241.sda
graph_title Total_LBAs_Written (sda)
graph_args --base 1024
graph_vlabel bytes
graph_info This graph shows the value of Total_LBAs_Written S.M.A.R.T. attributes
graph_category smart
id241.label Total_LBAs_Written
id241.type GAUGE
id241.min 0

multigraph smart_attr_242.sda
graph_title Total_LBAs_Read (sda)
graph_args --base 1024
graph_vlabel bytes
graph_info This graph shows the value of Total_LBAs_Read S.M.A.R.T. attributes
graph_category smart
id242.label Total_LBAs_Read
id242.type GAUGE
id242.min 0

EOF
}

sub print_graphs {
    # print root graphs
    print <<"EOF";
multigraph smart_attr_177
id177.value 168023

multigraph smart_attr_241
id241.value 8928633028608

multigraph smart_attr_242
id242.value 3149217660928

EOF

    # print deeeper graphs
    print <<"EOF";
multigraph smart_attr_177.sda
id177.value 168023

multigraph smart_attr_241.sda
id241.value 8928633028608

multigraph smart_attr_242.sda
id242.value 3149217660928

EOF
}
